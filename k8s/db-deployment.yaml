kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
 name: manual
provisioner: local-manual
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv1
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  local:
    path: /c/Java/k8s/mongo/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mongo-pv2
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 200Mi
#   accessModes:
#   - ReadWriteOnce
#   volumeMode: Filesystem
#   local:
#     path: /c/Java/k8s/mongo/data2
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/hostname
#           operator: In
#           values:
#           - docker-desktop
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-db
  labels:
    name: mongo-db
spec:
  ports:
  - port: 27017
    targetPort: 27017
  # clusterIP: None
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-db-external
  labels:
    name: mongo-db-external
spec:
  ports:
  - port: 27017
    targetPort: 27017
    nodePort: 30001
  type: NodePort
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db
spec:
  selector:
    matchLabels:
      role: mongo
      environment: test
  serviceName: "mongo-db"
  replicas: 1
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo
        args:
        - --dbpath
        - /data/db
          # - "--replSet"
          # - rs0
          # - "--smallfiles"
          # - "--noprealloc"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
        livenessProbe:
          exec:
            command:
            - mongo
            - --disableImplicitSessions
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --disableImplicitSessions
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
          # valueFrom:
          #   secretKeyRef:
          #     name: mongo-creds
          #     key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "admin"
          # valueFrom:
          #   secretKeyRef:
          #     name: mongo-creds
          #     key: password
      # - name: mongo-sidecar
      #   image: cvallance/mongo-k8s-sidecar
      #   env:
      #   - name: MONGO_SIDECAR_POD_LABELS
      #     value: "role=mongo,environment=test"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      storageClassName: manual
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
